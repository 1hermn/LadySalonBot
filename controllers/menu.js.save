const { Scenes, Markup } = require('telegraf');
const tools = require('../tools/tools.js')
const fs = require('fs')
const menu = new Scenes.WizardScene(
    'menu',
    (ctx) => {
        tools.log_user_message(ctx)
        ctx.reply('–ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ –º–Ω–µ..', Markup.keyboard([
            ["–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —É—Å–ª—É–≥–∏ üîù"],
            ["–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—Å üëã"],
            ["–£—Å–ª—É–≥–∏ üë•"],
            ["–ù–∞—à–∏ –º–∞—Å—Ç–µ—Ä–∞"], 
            ["–ö–∞–∫ —è –º–æ–≥—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è?  üìû"], 
            ["–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –∏ —Ä–∞–±–æ—Ç–∞"],
            ["–õ–æ—è–ª—å–Ω–æ—Å—Ç—å üëë"],
            ["–û–Ω–ª–∞–π–Ω –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è üôã"],
            ["–ò–∑–±—Ä–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏ ‚≠ê"],
            ["–û—Ç–∑—ã–≤—ã üìå"],
            ["–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å üó£Ô∏è"]
        ]))
        return ctx.wizard.next();
    },
   async (ctx) => {
        if(!ctx.message){
            console.log("–û—à–∏–±–∫–∞")
        }else {
        switch (ctx.message.text) {
            case "–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —É—Å–ª—É–≥–∏ üîù":
                const PopServices = await tools.get_PopServices();
                for(var i = 0; i < PopServices.length; ++i) {
                    ctx.reply(`${PopServices[i].text}`)
                }
                return ctx.scene.enter("masters")
                break;
            case "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—Å üëã":{
                ctx.replyWithMediaGroup([
                    {
                        type: 'photo',
                        media: {
                            source: fs.createReadStream('img/about_us_1.jpg')
                        }   
                    },
                    {
                        type: 'photo',
                        media: {
                            source: fs.createReadStream('img/about_us_2.png')
                        }  
                    }
                ])
                await tools.sleep(1000)
                ctx.replyWithMarkdown(`*–°–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã Lady D.I. Studio* ‚Äî —Ç–≤–æ—Ä—á–µ—Å–∫–æ–µ –±—å—é—Ç–∏-–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã—Ö –∏ –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º—ã—Ö –æ–±—Ä–∞–∑–æ–≤.

–ë–ª–∞–≥–æ–¥–∞—Ä—è –¥—É—à–µ–≤–Ω–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä–µ, –∑–∞–±–æ—Ç–ª–∏–≤—ã–º —Ä—É–∫–∞–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –∫–æ—Å–º–µ—Ç–∏–∫–µ lux-—Å–µ–≥–º–µ–Ω—Ç–∞,
–º–æ–∂–Ω–æ –∑–∞–±—ã—Ç—å –æ —Å—É–µ—Ç–ª–∏–≤—ã—Ö –±—É–¥–Ω—è—Ö –∏ –æ–∫—É–Ω—É—Ç—å—Å—è –≤ –≤–æ–ª–Ω—É —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏—è –∏ –Ω–µ—Å–∫–æ–Ω—á–∞–µ–º–æ–≥–æ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è.

–ê–¥—Ä–µ—Å: [—É–ª–∏—Ü–∞ –ü–æ–¥–≥–æ—Ä–Ω–∞—è 67 –ø–æ–º 1–∞, –ú–∏–Ω—Å–∫](https://yandex.by/maps/157/minsk/?ll=27.680517%2C53.953493&mode=whatshere&whatshere%5Bpoint%5D=27.680490%2C53.953487&whatshere%5Bzoom%5D=17&z=17)
–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: 
–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫   09:00‚Äì20:00
–≤—Ç–æ—Ä–Ω–∏–∫           09:00‚Äì20:00
—Å—Ä–µ–¥–∞.   	09:00‚Äì20:00
—á–µ—Ç–≤–µ—Ä–≥	09:00‚Äì20:00
–ø—è—Ç–Ω–∏—Ü–∞	09:00‚Äì20:00
—Å—É–±–±–æ—Ç–∞	09:00‚Äì17:00
–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ	09:00‚Äì17:00                
`)
//–û–¢–ü–†–ê–í–ò–¢–¨ –§–û–¢–û
                break;
            }
            case "–ù–∞—à–∏ –º–∞—Å—Ç–µ—Ä–∞": {
                tools.update_scene(ctx, 'masters')
                return ctx.scene.enter("masters")
            }
            case "–ö–∞–∫ —è –º–æ–≥—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è?  üìû" :{
                tools.update_scene(ctx,'zapis')
                ctx.scene.enter("zapis")
                break;
                //TODO: –∑–∞–ø–∏—Å—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å
            }
            case "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –∏ —Ä–∞–±–æ—Ç–∞": {
                const inlineMessageKeyboard = Markup.inlineKeyboard([
                    Markup.button.url('–ü–µ—Ä–µ—Ç–∏', 'https://www.instagram.com/lady.d.i/')
                ])
                ctx.reply("–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –∏ —Ä–∞–±–æ—Ç–∞:", inlineMessageKeyboard)
                break;
            }
            case "–õ–æ—è–ª—å–Ω–æ—Å—Ç—å üëë" : {
     ctx.reply("test"
               break;
            }
            case "–û–Ω–ª–∞–π–Ω –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è üôã" : {
                ctx.replyWithMarkdown("[+375 29 111 22 58](tel:+375 29 111 22 58)");
                break;
            }
            case "–ò–∑–±—Ä–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏ ‚≠ê": {
                const ExcServices = await tools.get_excServices();
                for(var i = 0; i < ExcServices.length; ++i) {
                    ctx.reply(`${ExcServices[i].text}`)
                }
                break;
            }
            case "–û—Ç–∑—ã–≤—ã üìå": {
                const inlineMessageKeyboard = Markup.inlineKeyboard([
                    Markup.button.url('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å', 'https://www.instagram.com/s/aGlnaGxpZ2h0OjE4MDI3MzM4MjM2MTU2MzAz?igshid=u4ci9t2rghu9')
                ])
                ctx.reply("–û—Ç–∑—ã–≤—ã:", inlineMessageKeyboard)
                break;
            }
            case "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å üó£Ô∏è": {
                tools.update_scene(ctx, 'otziv')
                ctx.scene.enter("otziv")
                break;
            }
            case '–£—Å–ª—É–≥–∏ üë•':{
                tools.update_scene(ctx, 'services')
                ctx.scene.enter("services");
            }
            default:
                break;
        }
    }
    }
)
module.exports = {
    scene: menu
}
