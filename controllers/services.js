const { Scenes, Markup } = require('telegraf');
const {update_scene, log_user_message} = require('../tools/tools.js');
const services = new Scenes.WizardScene(
    'services',
    (ctx) => {
        log_user_message(ctx)
        ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç..', Markup.keyboard([
            ["–ö–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—è –∏ —É—Å–ª—É–≥–∏ –¥–ª—è –ª–∏—Ü–∞üßè"],
            ["–ú–∞—Å—Å–∞–∂ –∏ —É—Å–ª—É–≥–∏ –¥–ª—è —Ç–µ–ª–∞ üõÄ"],
            ["–ù–æ–≥—Ç–µ–≤–æ–π —Å–µ—Ä–≤–∏—Å üíÖ"],
            ["–ü–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–∏–µ —É—Å–ª—É–≥–∏"],
            ["–£—Å–ª—É–≥–∏ –±–∞—Ä–±–µ—Ä–∞"],
            ["–ú–∞–∫–∏—è–∂ –∏ –±—Ä–æ–≤–∏ üëÑ"],
            ["–ù–∞–∑–∞–¥"]
        ]))
        return ctx.wizard.next();
    },
    (ctx) => {
        if(ctx.update.callback_query != undefined){
            ctx.reply("–û—à–∏–±–∫–∞");
            return ctx.wizard.back();
        }
        switch (ctx.message.text) {
            case "–ö–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—è –∏ —É—Å–ª—É–≥–∏ –¥–ª—è –ª–∏—Ü–∞üßè":
                update_scene(ctx, 'cosm')
                return ctx.scene.enter("cosm");
            case "–ú–∞—Å—Å–∞–∂ –∏ —É—Å–ª—É–≥–∏ –¥–ª—è —Ç–µ–ª–∞ üõÄ":
                update_scene(ctx, 'mass')
                return ctx.scene.enter("mass");
            case"–ù–æ–≥—Ç–µ–≤–æ–π —Å–µ—Ä–≤–∏—Å üíÖ":
                update_scene(ctx, 'ns')
                return ctx.scene.enter("ns");
            case '–ü–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–∏–µ —É—Å–ª—É–≥–∏':
                update_scene(ctx, 'parik')
                return ctx.scene.enter("parik")
            case "–£—Å–ª—É–≥–∏ –±–∞—Ä–±–µ—Ä–∞":
                update_scene(ctx, 'barber')
                return ctx.scene.enter("barber")
            case "–ú–∞–∫–∏—è–∂ –∏ –±—Ä–æ–≤–∏ üëÑ":
                update_scene(ctx, 'mak')
                return ctx.scene.enter("mak")
            case "–ù–∞–∑–∞–¥":
                update_scene(ctx, 'menu')
                return ctx.scene.enter("menu");
            default:
                break;
        }
    }
)
module.exports = {
    scene: services
}
